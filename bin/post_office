#!/usr/bin/env ruby
$LOAD_PATH.unshift File.dirname(__FILE__) + '/../lib'

require 'optparse'
require 'logger'
require 'thread'
require 'smtp_server.rb'
require 'pop_server.rb'

#
# Parse command line arguments
#
options = {}
 
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: #{__FILE__} [options]"

  options[:verbose] = false
  opts.on( '-v', '--verbose', 'Output more information' ) do
    options[:verbose] = true
  end

  options[:logfile] = nil
  opts.on( '-l', '--logfile FILE', 'Write log to FILE. Outputs to STDOUT (or /var/log/post_office.log when daemonized) by default.' ) do |file|
    options[:logfile] = file
  end

  options[:smtp_port] = nil
  opts.on( '-smtp', '--smtp PORT', 'Specify SMTP port to use' ) do |port|
    options[:smtp_port] = port
  end

  options[:pop3_port] = nil
  opts.on( '-pop3', '--pop3 PORT', 'Specify POP3 port to use' ) do |port|
    options[:smtp_pop3_port] = port
  end
  
  options[:startup_item] = nil
  opts.on('--install-osx-startup-item', 'Installs Post Office as OS X Startup Item') do
    options[:startup_item] = :install
  end
  opts.on('--remove-osx-startup-item', 'Removes Post Office as OS X Startup Item') do
    options[:startup_item] = :remove
  end

  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
end

optparse.parse!

#
# OS X Startup Item
#
if options[:startup_item]
  require 'startup_item.rb'
  case options[:startup_item]
    when :install then StartupItem.install
    when :remove then StartupItem.remove
  end
  exit
end

#
# Create our logger
#
$log = Logger.new(options[:logfile] || STDOUT)
$log.level = options[:verbose] ? Logger::DEBUG : Logger::INFO

begin
  smtp_server = Thread.new{ SMTPServer.new(options[:smtp_port] || 25) }
  pop_server  = Thread.new{ POPServer.new(options[:pop3_port]) || 110 }

  smtp_server.join
  pop_server.join
rescue Interrupt
  $log.info "Interrupt..."
rescue Errno::EACCES
  $log.error "I need root access to open ports 25 and 110. Please sudo #{__FILE__}"
end
